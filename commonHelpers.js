import{a as $,S as f,i as n}from"./assets/vendor-5401a4b0.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const I="42472601-e2efb745d6431960b7108569a";async function y(r,o=1){const s=`https://pixabay.com/api/?key=${I}&q=${r}&image_type=photo&orientation=horizontal&safesearch=true&page=${o}`;try{const a=await $.get(s);if(a.status!==200)throw new Error(`HTTP error! Status: ${a.status}`);return a.data}catch(a){throw new Error(`Error fetching images: ${a.message}`)}}const P=document.getElementById("loader"),g=document.getElementById("gallery"),A=new f(".gallery a");async function p(r){const o=r.map(({webformatURL:e,largeImageURL:t,tags:i,likes:b,views:w,comments:v,downloads:L})=>`<div class="card">
      <a href="${t}" data-lightbox="gallery" data-title="${i}">
        <img src="${e}" alt="${i}" title="${i}"/>
      </a>
      <div class="card-border">
      <div class="param">
      <p class="title">Likes:</p>
      <p class="title">Views:</p>
      <p class="title">Comments:</p>
      <p class="title">Downloads:</p>
       </div>
        <div class="param">
      <p class="title-value">${b}</p>
      <p class="title-value">${w}</p>
      <p class="title-value">${v}</p>
      <p class="title-value">${L}</p>
       </div>
      </div>
    </div>`);g.innerHTML=o.join("");const s=g.querySelectorAll("img"),a=Array.from(s).map(e=>new Promise((t,i)=>{e.onload=t,e.onerror=i}));try{await Promise.all(a),P.style.display="none",A.refresh()}catch(e){console.error("Error loading images:",e)}}const h="/goit-js-hw-12/assets/caution-75a3a476.svg",O="/goit-js-hw-12/assets/error-5bc7b79a.svg",c=document.getElementById("loader"),E=document.getElementById("gallery");new f(".gallery a");const R=document.getElementById("search-form"),B=document.getElementById("search-input"),d=document.getElementById("load-more-btn");let l=1,m="";function u(r){d.style.display=r?"block":"none"}async function C(){c.style.display="block";try{l+=1;const r=await y(m,l);if(r.hits.length>0){p(r.hits);const o=E.querySelector(".card").getBoundingClientRect().height;window.scrollBy({top:o*2,behavior:"smooth"})}else n.warning({title:"No more results",message:"There are no more images for this search",theme:"dark",position:"topRight",backgroundColor:"#ffa000",messageColor:"#fafafb",iconUrl:h}),l===1?d.style.display="none":d.disabled=!0}catch(r){n.error({title:"Error",message:"An error occured while fetching more images. Please try again"}),console.error("Error fetching more images:",r)}finally{c.style.display="none"}}d.addEventListener("click",C);async function S(r){r.preventDefault(),l=1;const o=B.value.trim();if(m=o,o===""){n.error({title:"Error",message:"Please enter a search term!",theme:"dark",position:"topRight",backgroundColor:"#ef4040",messageColor:"#fafafb",iconUrl:O});return}c.style.display="block",E.innerHTML="",u(!1);try{const s=await y(m);s.hits.length===0?n.warning({title:"No results",message:"Sorry, there are no images matching your search.Please try again!",theme:"dark",position:"topRight",backgroundColor:"#ffa000",messageColor:"#fafafb",iconUrl:h}):(p(s.hits),u(!0))}catch(s){n.error({title:"Error",message:"An error occurred while fetching images. Please try again!"}),console.error("Error fetching images:",s)}finally{setTimeout(()=>{c.style.display="none"},1500)}}R.addEventListener("submit",S);
//# sourceMappingURL=commonHelpers.js.map
