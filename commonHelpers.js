import{a as P,S as m,i}from"./assets/vendor-5401a4b0.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();const $="42472601-e2efb745d6431960b7108569a",A=15;async function g(r,t=1){const n=`https://pixabay.com/api/?key=${$}&q=${r}&image_type=photo&orientation=horizontal&safesearch=true&page=${t}&per_page=${A}`;try{const s=await P.get(n);if(s.status!==200)throw new Error(`HTTP error! Status: ${s.status}`);return s.data}catch(s){throw new Error(`Error fetching images: ${s.message}`)}}const I=document.getElementById("loader"),u=document.getElementById("gallery"),R=new m(".gallery a");async function f(r){const t=r.map(({webformatURL:e,largeImageURL:o,tags:a,likes:b,views:w,comments:v,downloads:L})=>`<div class="card">
      <a href="${o}" data-lightbox="gallery" data-title="${a}">
        <img src="${e}" alt="${a}" title="${a}"/>
      </a>
      <div class="card-border">
      <div class="param">
      <p class="title">Likes:</p>
      <p class="title">Views:</p>
      <p class="title">Comments:</p>
      <p class="title">Downloads:</p>
       </div>
        <div class="param">
      <p class="title-value">${b}</p>
      <p class="title-value">${w}</p>
      <p class="title-value">${v}</p>
      <p class="title-value">${L}</p>
       </div>
      </div>
    </div>`);u.innerHTML=t.join("");const n=u.querySelectorAll("img"),s=Array.from(n).map(e=>new Promise((o,a)=>{e.onload=o,e.onerror=a}));try{await Promise.all(s),I.style.display="none",R.refresh()}catch(e){console.error("Error loading images:",e)}}const O="/goit-js-hw-12/assets/caution-75a3a476.svg",p="/goit-js-hw-12/assets/error-5bc7b79a.svg",B=document.getElementById("loader"),h=document.getElementById("gallery"),S=document.getElementById("search-form"),C=document.getElementById("search-input"),y=document.getElementById("load-more-btn");new m(".gallery a");let l=1,E="";const H=15;function d(r){y.style.display=r?"block":"none"}function c(r){B.style.display=r?"block":"none"}async function M(){c(!0);try{l+=1;const r=await g(E,l),t=r.totalHits,n=Math.floor(t/H);if(l>n)i.error({message:"We're sorry, but you've reached the end of search results.",theme:"dark",position:"topRight",backgroundColor:"#ef4040",messageColor:"#fafafb",iconUrl:p}),d(!1);else{f(r.hits);const s=h.querySelector(".card").getBoundingClientRect().height;window.scrollBy({top:s*2,behavior:"smooth"})}}catch(r){i.error({title:"Error",message:"An error occurred while fetching more images. Please try again."}),console.error("Error fetching more images:",r)}finally{c(!1)}}y.addEventListener("click",M);async function T(r){c(!0);try{const t=await g(r);t.hits.length===0?i.warning({title:"No results",message:"Sorry, there are no images matching your search. Please try again!",theme:"dark",position:"topRight",backgroundColor:"#ffa000",messageColor:"#fafafb",iconUrl:O}):(f(t.hits),d(!0))}catch(t){i.error({title:"Error",message:"An error occurred while fetching images. Please try again!"}),console.error("Error fetching images:",t)}finally{c(!1)}}async function _(r){r.preventDefault(),l=1;const t=C.value.trim();if(E=t,t===""){i.error({title:"Error",message:"Please enter a search term!",theme:"dark",position:"topRight",backgroundColor:"#ef4040",messageColor:"#fafafb",iconUrl:p});return}h.innerHTML="",d(!1),await T(t)}S.addEventListener("submit",_);
//# sourceMappingURL=commonHelpers.js.map
